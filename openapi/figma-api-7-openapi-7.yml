responses:
  - PostWebhookResponse
  - BadRequestErrorResponseWithErrorBoolean
  - ForbiddenErrorResponseWithErrMessage
  - TooManyRequestsErrorResponseWithErrMessage
  - InternalServerErrorResponseWithErrMessage
  - GetWebhookResponse
  - NotFoundErrorResponseWithErrorBoolean
  - PutWebhookResponse
  - DeleteWebhookResponse
  - InternalServerErrorResponseWithErrorBoolean
  - GetWebhookRequestsResponse
schema:
  - WebhookV2
  - WebhookV2
  - WebhookV2
  - WebhookV2
  - WebhookV2Request
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrorBoolean
openapi:
  openapi: 3.1.0
  info:
    title: Figma API
    version: 0.21.0
    description: >-
      This is the OpenAPI specification for the [Figma REST
      API](https://www.figma.com/developers/api).
    termsOfService: https://www.figma.com/developer-terms/
    contact:
      email: support@figma.com
  servers:
    - url: https://api.figma.com
  paths:
    /v2/webhooks:
      post:
        tags:
          - Webhooks
        summary: Create a webhook
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - webhooks:write
        description: >-
          Create a new webhook which will call the specified endpoint when the
          event triggers. By default, this webhook will automatically send a
          PING event to the endpoint when it is created. If this behavior is not
          desired, you can create the webhook and set the status to PAUSED and
          reactivate it later.
        operationId: postWebhook
        requestBody:
          description: The webhook to create.
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_type:
                    $ref: '#/components/schemas/WebhookV2Event'
                  team_id:
                    type: string
                    description: Team id to receive updates about
                  endpoint:
                    type: string
                    description: >-
                      The HTTP endpoint that will receive a POST request when
                      the event triggers. Max length 2048 characters.
                  passcode:
                    type: string
                    description: >-
                      String that will be passed back to your webhook endpoint
                      to verify that it is being called by Figma. Max length 100
                      characters.
                  status:
                    $ref: '#/components/schemas/WebhookV2Status'
                    description: >-
                      State of the webhook, including any error state it may be
                      in
                  description:
                    type: string
                    description: >-
                      User provided description or name for the webhook. Max
                      length 150 characters.
                required:
                  - event_type
                  - team_id
                  - endpoint
                  - passcode
        callbacks:
          ping:
            '{$request.body#/endpoint}':
              post:
                summary: Ping event
                description: >-
                  Triggers when a webhook is created. Used for debugging. Cannot
                  be subscribed to, all webhooks will receive `PING` events.
                security:
                  - PersonalAccessToken: []
                  - OAuth2:
                      - webhooks:write
                requestBody:
                  description: >-
                    The webhook will send a PING event to the endpoint when it
                    is created.
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/WebhookPingPayload'
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code
                                          if the data was received successfully
                  '400':
                    description: >-
                      If your server returns a non-200 status code, or takes too
                      long, the Figma API will treat this as an error. Figma
                      retries failed requests 3 times with an exponential
                      backoff strategy.
          fileUpdate:
            '{$request.body#/endpoint}':
              post:
                summary: File update event
                description: Triggers within 30 minutes of editing inactivity in a file.
                security:
                  - PersonalAccessToken: []
                  - OAuth2:
                      - webhooks:write
                requestBody:
                  description: >-
                    This is useful when you want to stay up-to-date with the
                    contents of a file. For example, you could generate a static
                    website from your Figma document and keep it always
                    up-to-date with this webhook.
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/WebhookFileUpdatePayload'
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code
                                          if the data was received successfully
                  '400':
                    description: >-
                      If your server returns a non-200 status code, or takes too
                      long, the Figma API will treat this as an error. Figma
                      retries failed requests 3 times with an exponential
                      backoff strategy.
          fileVersionUpdate:
            '{$request.body#/endpoint}':
              post:
                summary: File version update event
                description: >-
                  Triggers whenever a named version is created in the version
                  history of a file.
                security:
                  - PersonalAccessToken: []
                  - OAuth2:
                      - webhooks:write
                requestBody:
                  description: >-
                    This is useful for workflow integrations. For example,
                    suppose you have a Figma document with icon assets. When the
                    design for an asset is updated and ready to publish, you can
                    have a member of the team tag that version in the version
                    history and then use this webhook event to generate and
                    deploy your new asset version.
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/WebhookFileVersionUpdatePayload'
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code
                                          if the data was received successfully
                  '400':
                    description: >-
                      If your server returns a non-200 status code, or takes too
                      long, the Figma API will treat this as an error. Figma
                      retries failed requests 3 times with an exponential
                      backoff strategy.
          fileDelete:
            '{$request.body#/endpoint}':
              post:
                summary: File delete event
                description: >-
                  Triggers whenever a file has been deleted. If you subscribe to
                  `FILE_UPDATE`, you automatically get these notifications. Note
                  that this does not trigger on all files within a folder, if
                  the folder is deleted.
                security:
                  - PersonalAccessToken: []
                  - OAuth2:
                      - webhooks:write
                requestBody:
                  description: >-
                    Note if a folder is deleted, this event will not trigger for
                    files within the folder.
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/WebhookFileDeletePayload'
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code
                                          if the data was received successfully
                  '400':
                    description: >-
                      If your server returns a non-200 status code, or takes too
                      long, the Figma API will treat this as an error. Figma
                      retries failed requests 3 times with an exponential
                      backoff strategy.
          libraryPublish:
            '{$request.body#/endpoint}':
              post:
                summary: Library publish event
                description: Triggers whenever a library file is published.
                security:
                  - PersonalAccessToken: []
                  - OAuth2:
                      - webhooks:write
                requestBody:
                  description: >-
                    This is useful for workflow integrations. This webhook could
                    integrate with Slack, Asana or Jira, notifying designers to
                    modify their assets when new components are published.


                    Note: when a library is published, a separate
                    `LIBRARY_PUBLISH` event will be triggered for each type of
                    library asset (components, styles, and variables) that has
                    changes.
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/WebhookLibraryPublishPayload'
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code
                                          if the data was received successfully
                  '400':
                    description: >-
                      If your server returns a non-200 status code, or takes too
                      long, the Figma API will treat this as an error. Figma
                      retries failed requests 3 times with an exponential
                      backoff strategy.
          fileComment:
            '{$request.body#/endpoint}':
              post:
                summary: File comment event
                description: Triggers when someone comments on a file.
                security:
                  - PersonalAccessToken: []
                  - OAuth2:
                      - webhooks:write
                requestBody:
                  description: >-
                    This webhook could integrate with Asana or Jira and
                    automatically create tasks whenever a user comments. It
                    could also integrate with Slack and notify mentioned users.
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/WebhookFileCommentPayload'
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code
                                          if the data was received successfully
                  '400':
                    description: >-
                      If your server returns a non-200 status code, or takes too
                      long, the Figma API will treat this as an error. Figma
                      retries failed requests 3 times with an exponential
                      backoff strategy.
        responses:
          '200':
            $ref: '#/components/responses/PostWebhookResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
    /v2/webhooks/{webhook_id}:
      get:
        tags:
          - Webhooks
        summary: Get a webhook
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: Get a webhook by ID.
        operationId: getWebhook
        parameters:
          - name: webhook_id
            in: path
            description: ID of webhook to get
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/GetWebhookResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
      put:
        tags:
          - Webhooks
        summary: Update a webhook
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - webhooks:write
        description: Update a webhook by ID.
        operationId: putWebhook
        parameters:
          - name: webhook_id
            in: path
            description: ID of webhook to update
            required: true
            schema:
              type: string
        requestBody:
          description: The webhook to update.
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  event_type:
                    $ref: '#/components/schemas/WebhookV2Event'
                  endpoint:
                    type: string
                    description: >-
                      The HTTP endpoint that will receive a POST request when
                      the event triggers. Max length 2048 characters.
                  passcode:
                    type: string
                    description: >-
                      String that will be passed back to your webhook endpoint
                      to verify that it is being called by Figma. Max length 100
                      characters.
                  status:
                    $ref: '#/components/schemas/WebhookV2Status'
                    description: >-
                      State of the webhook, including any error state it may be
                      in
                  description:
                    type: string
                    description: >-
                      User provided description or name for the webhook. Max
                      length 150 characters.
                required:
                  - event_type
                  - team_id
                  - endpoint
                  - passcode
        responses:
          '200':
            $ref: '#/components/responses/PutWebhookResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
      delete:
        tags:
          - Webhooks
        summary: Delete a webhook
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - webhooks:write
        description: Deletes the specified webhook. This operation cannot be reversed.
        operationId: deleteWebhook
        parameters:
          - name: webhook_id
            in: path
            description: ID of webhook to delete
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/DeleteWebhookResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrorBoolean'
    /v2/webhooks/{webhook_id}/requests:
      get:
        tags:
          - Webhooks
        summary: Get webhook requests
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: >-
          Returns all webhook requests sent within the last week. Useful for
          debugging.
        operationId: getWebhookRequests
        parameters:
          - name: webhook_id
            in: path
            description: The id of the webhook subscription you want to see events from
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/GetWebhookRequestsResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrorBoolean'
  components:
    responses:
      PostWebhookResponse:
        description: Response from the POST /v2/webhooks endpoint.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookV2'
      GetWebhookResponse:
        description: Response from the GET /v2/webhooks/{webhook_id} endpoint.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookV2'
      PutWebhookResponse:
        description: Response from the PUT /v2/webhooks/{webhook_id} endpoint.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookV2'
      DeleteWebhookResponse:
        description: Response from the DELETE /v2/webhooks/{webhook_id} endpoint.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookV2'
      GetWebhookRequestsResponse:
        description: Response from the GET /v2/webhooks/{webhook_id}/requests endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                requests:
                  type: array
                  description: An array of webhook requests.
                  items:
                    $ref: '#/components/schemas/WebhookV2Request'
              required:
                - requests
      BadRequestErrorResponseWithErrorBoolean:
        description: >-
          Bad request. Parameters are invalid or malformed. Please check the
          input formats. This error can also happen if the requested resources
          are too large to complete the request, which results in a timeout.
          Please reduce the number and size of objects requested.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 400
                  required:
                    - status
      ForbiddenErrorResponseWithErrMessage:
        description: >-
          The request was valid, but the server is refusing action. The user
          might not have the necessary permissions for a resource, or may need
          an account of some sort.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 403
                  required:
                    - status
      NotFoundErrorResponseWithErrorBoolean:
        description: The requested file or resource was not found.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 404
                  required:
                    - status
      TooManyRequestsErrorResponseWithErrMessage:
        description: >-
          In some cases API requests may be throttled or rate limited. Please
          wait a while before attempting the request again (typically a minute).
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 429
                  required:
                    - status
      InternalServerErrorResponseWithErrMessage:
        description: An internal server error occurred.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 500
                  required:
                    - status
      InternalServerErrorResponseWithErrorBoolean:
        description: An internal server error occurred.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 500
                  required:
                    - status
    schemas:
      WebhookV2:
        type: object
        description: A description of an HTTP webhook (from Figma back to your application)
        properties:
          id:
            type: string
            description: The ID of the webhook
          event_type:
            $ref: '#/components/schemas/WebhookV2Event'
            description: The event this webhook triggers on
          team_id:
            type: string
            description: The team id you are subscribed to for updates
          status:
            $ref: '#/components/schemas/WebhookV2Status'
            description: The current status of the webhook
          client_id:
            type:
              - string
              - 'null'
            description: >-
              The client ID of the OAuth application that registered this
              webhook, if any
          passcode:
            type: string
            description: The passcode that will be passed back to the webhook endpoint
          endpoint:
            type: string
            description: The endpoint that will be hit when the webhook is triggered
          description:
            type:
              - string
              - 'null'
            description: >-
              Optional user-provided description or name for the webhook. This
              is provided to help make maintaining a number of webhooks more
              convenient. Max length 140 characters.
        required:
          - id
          - event_type
          - team_id
          - status
          - client_id
          - passcode
          - endpoint
          - description
      WebhookV2Request:
        type: object
        description: >-
          Information regarding the most recent interactions sent to a webhook
          endpoint
        properties:
          webhook_id:
            type: string
            description: The ID of the webhook the requests were sent to
          request_info:
            $ref: '#/components/schemas/WebhookV2RequestInfo'
          response_info:
            $ref: '#/components/schemas/WebhookV2ResponseInfo'
          error_msg:
            type:
              - string
              - 'null'
            description: Error message for this request. NULL if no error occurred
        required:
          - webhook_id
          - request_info
          - response_info
          - error_msg
      ErrorResponsePayloadWithErrMessage:
        type: object
        description: A response indicating an error occurred.
        properties:
          status:
            type: number
            description: Status code
          err:
            type: string
            description: A string describing the error
        required:
          - status
          - err
      ErrorResponsePayloadWithErrorBoolean:
        type: object
        description: A response indicating an error occurred.
        properties:
          error:
            type: boolean
            description: For erroneous requests, this value is always `true`.
            enum:
              - true
          status:
            type: number
            description: Status code
          message:
            type: string
            description: A string describing the error
        required:
          - error
          - status
          - message
