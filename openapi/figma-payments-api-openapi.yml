openapi: 3.1.0
info:
  title: Figma Payments API
  version: 0.21.0
  description: |-

    Figma allows designers to create and prototype their digital experiences -
    together in real-time and in one place - helping them turn their ideas and
    visions into products, faster. Figma's mission is to make design
    accessible to everyone. The Figma API is one of the ways we aim to do
    that.
  termsOfService: https://www.figma.com/developer-terms/
  contact:
    email: support@figma.com
servers:
  - url: https://api.figma.com
paths:
  /v1/payments:
    get:
      tags:
        - Payments
      summary: Get payments
      security:
        - PersonalAccessToken: []
      description: >-
        There are two methods to query for a user's payment information on a
        plugin, widget, or Community file. The first method, using plugin
        payment tokens, is typically used when making queries from a plugin's or
        widget's code. The second method, providing a user ID and resource ID,
        is typically used when making queries from anywhere else.


        Note that you can only query for resources that you own. In most cases,
        this means that you can only query resources that you originally
        created.
      operationId: getPayments
      parameters:
        - name: plugin_payment_token
          in: query
          description: >-
            Short-lived token returned from "getPluginPaymentTokenAsync" in the
            plugin payments API and used to authenticate to this endpoint. Read
            more about generating this token through "Calling the Payments REST
            API from a plugin or widget" below.
          schema:
            type: string
        - name: user_id
          in: query
          description: >-
            The ID of the user to query payment information about. You can get
            the user ID by having the user OAuth2 to the Figma REST API.
          schema:
            type: number
        - name: community_file_id
          in: query
          description: >-
            The ID of the Community file to query a user's payment information
            on. You can get the Community file ID from the file's Community page
            (look for the number after "file/" in the URL). Provide exactly one
            of "community_file_id", "plugin_id", or "widget_id".
          schema:
            type: number
        - name: plugin_id
          in: query
          description: >-
            The ID of the plugin to query a user's payment information on. You
            can get the plugin ID from the plugin's manifest, or from the
            plugin's Community page (look for the number after "plugin/" in the
            URL). Provide exactly one of "community_file_id", "plugin_id", or
            "widget_id".
          schema:
            type: number
        - name: widget_id
          in: query
          description: >-
            The ID of the widget to query a user's payment information on. You
            can get the widget ID from the widget's manifest, or from the
            widget's Community page (look for the number after "widget/" in the
            URL). Provide exactly one of "community_file_id", "plugin_id", or
            "widget_id".
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/GetPaymentsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponseWithErrorBoolean'
        '429':
          $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrorBoolean'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponseWithErrorBoolean'
components:
  responses:
    GetPaymentsResponse:
      description: Response from the GET /v1/payments endpoint.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                enum:
                  - 200
                description: The response status code.
              error:
                type: boolean
                enum:
                  - false
                description: For successful requests, this value is always `false`.
              meta:
                $ref: '#/components/schemas/PaymentInformation'
            required:
              - status
              - error
              - meta
    UnauthorizedErrorResponseWithErrorBoolean:
      description: Token is missing or incorrect.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
              - type: object
                properties:
                  status:
                    type: number
                    description: Status code
                    enum:
                      - 401
                required:
                  - status
    TooManyRequestsErrorResponseWithErrorBoolean:
      description: >-
        In some cases API requests may be throttled or rate limited. Please wait
        a while before attempting the request again (typically a minute).
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
              - type: object
                properties:
                  status:
                    type: number
                    description: Status code
                    enum:
                      - 429
                required:
                  - status
    InternalServerErrorResponseWithErrorBoolean:
      description: An internal server error occurred.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
              - type: object
                properties:
                  status:
                    type: number
                    description: Status code
                    enum:
                      - 500
                required:
                  - status
  schemas:
    PaymentInformation:
      type: object
      description: >-
        An object describing a user's payment information for a plugin, widget,
        or Community file.
      properties:
        user_id:
          type: string
          description: >-
            The ID of the user whose payment information was queried. Can be
            used to verify the validity of a response.
        resource_id:
          type: string
          description: >-
            The ID of the plugin, widget, or Community file that was queried.
            Can be used to verify the validity of a response.
        resource_type:
          type: string
          description: The type of the resource.
          enum:
            - PLUGIN
            - WIDGET
            - COMMUNITY_FILE
        payment_status:
          $ref: '#/components/schemas/PaymentStatus'
        date_of_purchase:
          type: string
          format: date-time
          description: >-
            The UTC ISO 8601 timestamp indicating when the user purchased the
            resource. No value is given if the user has never purchased the
            resource.
              
            Note that a value will still be returned if the user had purchased
            the resource, but no longer has active access to it (e.g. purchase
            refunded, subscription ended).
      required:
        - user_id
        - resource_id
        - resource_type
        - payment_status
    ErrorResponsePayloadWithErrorBoolean:
      type: object
      description: A response indicating an error occurred.
      properties:
        error:
          type: boolean
          description: For erroneous requests, this value is always `true`.
          enum:
            - true
        status:
          type: number
          description: Status code
        message:
          type: string
          description: A string describing the error
      required:
        - error
        - status
        - message
