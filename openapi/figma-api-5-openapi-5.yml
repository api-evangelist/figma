responses:
  - GetActivityLogsResponse
  - BadRequestErrorResponseWithErrorBoolean
  - UnauthorizedErrorResponseWithErrorBoolean
  - ForbiddenErrorResponseWithErrorBoolean
  - TooManyRequestsErrorResponseWithErrorBoolean
  - InternalServerErrorResponseWithErrorBoolean
schema:
  - ActivityLog
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrorBoolean
openapi:
  openapi: 3.1.0
  info:
    title: Figma API
    version: 0.21.0
    description: >-
      This is the OpenAPI specification for the [Figma REST
      API](https://www.figma.com/developers/api).
    termsOfService: https://www.figma.com/developer-terms/
    contact:
      email: support@figma.com
  servers:
    - url: https://api.figma.com
  paths:
    /v1/activity_logs:
      get:
        tags:
          - Activity Logs
        summary: Get activity logs
        security:
          - OrgOAuth2:
              - org:activity_log_read
        description: Returns a list of activity log events
        operationId: getActivityLogs
        parameters:
          - name: events
            description: >-
              Event type(s) to include in the response. Can have multiple values
              separated by comma. All events are returned by default.
            in: query
            schema:
              type: string
          - name: start_time
            description: >-
              Unix timestamp of the least recent event to include. This param
              defaults to one year ago if unspecified. Events prior to one year
              ago are not available.
            in: query
            schema:
              type: number
          - name: end_time
            description: >-
              Unix timestamp of the most recent event to include. This param
              defaults to the current timestamp if unspecified.
            in: query
            schema:
              type: number
          - name: limit
            description: >-
              Maximum number of events to return. This param defaults to 1000 if
              unspecified.
            in: query
            schema:
              type: number
          - name: order
            description: >-
              Event order by timestamp. This param can be either "asc" (default)
              or "desc".
            in: query
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
        responses:
          '200':
            $ref: '#/components/responses/GetActivityLogsResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '401':
            $ref: '#/components/responses/UnauthorizedErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrorBoolean'
          '429':
            $ref: >-
              #/components/responses/TooManyRequestsErrorResponseWithErrorBoolean
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrorBoolean'
  components:
    responses:
      GetActivityLogsResponse:
        description: Response from the GET /v1/activity_logs endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  enum:
                    - 200
                  description: The response status code.
                error:
                  type: boolean
                  enum:
                    - false
                  description: For successful requests, this value is always `false`.
                meta:
                  type: object
                  properties:
                    activity_logs:
                      type: array
                      description: >-
                        An array of activity logs sorted by timestamp in
                        ascending order by default.
                      items:
                        $ref: '#/components/schemas/ActivityLog'
                    cursor:
                      type: string
                      description: Encodes the last event (the most recent event)
                    next_page:
                      type: boolean
                      description: Whether there is a next page of events
      BadRequestErrorResponseWithErrorBoolean:
        description: >-
          Bad request. Parameters are invalid or malformed. Please check the
          input formats. This error can also happen if the requested resources
          are too large to complete the request, which results in a timeout.
          Please reduce the number and size of objects requested.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 400
                  required:
                    - status
      UnauthorizedErrorResponseWithErrorBoolean:
        description: Token is missing or incorrect.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 401
                  required:
                    - status
      ForbiddenErrorResponseWithErrorBoolean:
        description: >-
          The request was valid, but the server is refusing action. The user
          might not have the necessary permissions for a resource, or may need
          an account of some sort.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 403
                  required:
                    - status
      TooManyRequestsErrorResponseWithErrorBoolean:
        description: >-
          In some cases API requests may be throttled or rate limited. Please
          wait a while before attempting the request again (typically a minute).
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 429
                  required:
                    - status
      InternalServerErrorResponseWithErrorBoolean:
        description: An internal server error occurred.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 500
                  required:
                    - status
    schemas:
      ActivityLog:
        type: object
        description: An event returned by the Activity Logs API.
        properties:
          id:
            type: string
            description: The ID of the event.
          timestamp:
            type: number
            description: The timestamp of the event in seconds since the Unix epoch.
          actor:
            type:
              - object
              - 'null'
            description: The user who performed the action.
            properties:
              type:
                type: string
                description: The type of the user.
                enum:
                  - user
              id:
                type: string
                description: The ID of the user.
              name:
                type: string
                description: >-
                  The name of the user. For SCIM events, the value is "SCIM
                  Provider". For official support actions, the value is "Figma
                  Support".
              email:
                type: string
                description: The email of the user.
            required:
              - name
          action:
            type: object
            description: The task or activity the actor performed.
            properties:
              type:
                type: string
                description: The type of the action.
              details:
                type:
                  - object
                  - 'null'
                description: >-
                  Metadata of the action. Each action type supports its own
                  metadata attributes.
                additionalProperties: true
            required:
              - type
              - details
          entity:
            description: >-
              The resource the actor took the action on. It can be a user, file,
              project or other resource types.
            oneOf:
              - $ref: '#/components/schemas/ActivityLogUserEntity'
              - $ref: '#/components/schemas/ActivityLogFileEntity'
              - $ref: '#/components/schemas/ActivityLogFileRepoEntity'
              - $ref: '#/components/schemas/ActivityLogProjectEntity'
              - $ref: '#/components/schemas/ActivityLogTeamEntity'
              - $ref: '#/components/schemas/ActivityLogWorkspaceEntity'
              - $ref: '#/components/schemas/ActivityLogOrgEntity'
              - $ref: '#/components/schemas/ActivityLogPluginEntity'
              - $ref: '#/components/schemas/ActivityLogWidgetEntity'
            discriminator:
              propertyName: type
              mapping:
                user: '#/components/schemas/ActivityLogUserEntity'
                file: '#/components/schemas/ActivityLogFileEntity'
                file_repo: '#/components/schemas/ActivityLogFileRepoEntity'
                project: '#/components/schemas/ActivityLogProjectEntity'
                team: '#/components/schemas/ActivityLogTeamEntity'
                workspace: '#/components/schemas/ActivityLogWorkspaceEntity'
                org: '#/components/schemas/ActivityLogOrgEntity'
                plugin: '#/components/schemas/ActivityLogPluginEntity'
                widget: '#/components/schemas/ActivityLogWidgetEntity'
          context:
            type: object
            description: Contextual information about the event.
            properties:
              client_name:
                type:
                  - string
                  - 'null'
                description: >-
                  The third-party application that triggered the event, if
                  applicable.
              ip_address:
                type: string
                description: The IP address from of the client that sent the event request.
              is_figma_support_team_action:
                type: boolean
                description: >-
                  If Figma's Support team triggered the event. This is either
                  true or false.
              org_id:
                type: string
                description: The id of the organization where the event took place.
              team_id:
                type:
                  - string
                  - 'null'
                description: >-
                  The id of the team where the event took place -- if this took
                  place in a specific team.
            required:
              - client_name
              - ip_address
              - is_figma_support_team_action
              - org_id
              - team_id
        required:
          - id
          - timestamp
          - actor
          - action
          - entity
          - context
      ErrorResponsePayloadWithErrorBoolean:
        type: object
        description: A response indicating an error occurred.
        properties:
          error:
            type: boolean
            description: For erroneous requests, this value is always `true`.
            enum:
              - true
          status:
            type: number
            description: Status code
          message:
            type: string
            description: A string describing the error
        required:
          - error
          - status
          - message
