responses:
  - GetStyleResponse
  - BadRequestErrorResponseWithErrMessage
  - ForbiddenErrorResponseWithErrMessage
  - NotFoundErrorResponseWithErrorBoolean
  - TooManyRequestsErrorResponseWithErrMessage
  - InternalServerErrorResponseWithErrMessage
schema:
  - PublishedStyle
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrMessage
openapi:
  openapi: 3.1.0
  info:
    title: Figma API
    version: 0.21.0
    description: >-
      This is the OpenAPI specification for the [Figma REST
      API](https://www.figma.com/developers/api).
    termsOfService: https://www.figma.com/developer-terms/
    contact:
      email: support@figma.com
  servers:
    - url: https://api.figma.com
  paths:
    /v1/styles/{key}:
      get:
        tags:
          - Styles
        summary: Get style
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: Get metadata on a style by key.
        operationId: getStyle
        parameters:
          - name: key
            in: path
            description: The unique identifier of the style.
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/GetStyleResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrMessage'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
  components:
    responses:
      GetStyleResponse:
        description: Response from the GET /v1/styles/{key} endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: The status of the request.
                  enum:
                    - 200
                error:
                  type: boolean
                  description: For successful requests, this value is always `false`.
                  enum:
                    - false
                meta:
                  $ref: '#/components/schemas/PublishedStyle'
              required:
                - status
                - error
                - meta
      BadRequestErrorResponseWithErrMessage:
        description: >-
          Bad request. Parameters are invalid or malformed. Please check the
          input formats. This error can also happen if the requested resources
          are too large to complete the request, which results in a timeout.
          Please reduce the number and size of objects requested.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 400
                  required:
                    - status
      ForbiddenErrorResponseWithErrMessage:
        description: >-
          The request was valid, but the server is refusing action. The user
          might not have the necessary permissions for a resource, or may need
          an account of some sort.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 403
                  required:
                    - status
      NotFoundErrorResponseWithErrorBoolean:
        description: The requested file or resource was not found.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 404
                  required:
                    - status
      TooManyRequestsErrorResponseWithErrMessage:
        description: >-
          In some cases API requests may be throttled or rate limited. Please
          wait a while before attempting the request again (typically a minute).
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 429
                  required:
                    - status
      InternalServerErrorResponseWithErrMessage:
        description: An internal server error occurred.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 500
                  required:
                    - status
    schemas:
      PublishedStyle:
        type: object
        description: A set of published properties that can be applied to nodes.
        properties:
          key:
            type: string
            description: The unique identifier for the style
          file_key:
            type: string
            description: The unique identifier of the Figma file that contains the style.
          node_id:
            type: string
            description: ID of the style node within the figma file
          style_type:
            $ref: '#/components/schemas/StyleType'
          thumbnail_url:
            type: string
            description: A URL to a thumbnail image of the style.
          name:
            type: string
            description: The name of the style.
          description:
            type: string
            description: The description of the style as entered by the publisher.
          created_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the style was created.
          updated_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the style was last updated.
          user:
            $ref: '#/components/schemas/User'
            description: The user who last updated the style.
          sort_position:
            type: string
            description: A user specified order number by which the style can be sorted.
        required:
          - key
          - file_key
          - node_id
          - style_type
          - name
          - description
          - created_at
          - updated_at
          - user
          - sort_position
      ErrorResponsePayloadWithErrMessage:
        type: object
        description: A response indicating an error occurred.
        properties:
          status:
            type: number
            description: Status code
          err:
            type: string
            description: A string describing the error
        required:
          - status
          - err
      ErrorResponsePayloadWithErrorBoolean:
        type: object
        description: A response indicating an error occurred.
        properties:
          error:
            type: boolean
            description: For erroneous requests, this value is always `true`.
            enum:
              - true
          status:
            type: number
            description: Status code
          message:
            type: string
            description: A string describing the error
        required:
          - error
          - status
          - message
