responses:
  - GetTeamProjectsResponse
  - BadRequestErrorResponseWithErrorBoolean
  - ForbiddenErrorResponseWithErrMessage
  - TooManyRequestsErrorResponseWithErrMessage
  - InternalServerErrorResponseWithErrMessage
  - GetTeamComponentsResponse
  - BadRequestErrorResponseWithErrMessage
  - NotFoundErrorResponseWithErrorBoolean
  - GetTeamComponentSetsResponse
  - GetTeamStylesResponse
schema:
  - Project
  - PublishedComponent
  - ResponseCursor
  - PublishedComponentSet
  - ResponseCursor
  - PublishedStyle
  - ResponseCursor
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrorBoolean
  - ErrorResponsePayloadWithErrMessage
  - ErrorResponsePayloadWithErrMessage
openapi:
  openapi: 3.1.0
  info:
    title: Figma API
    version: 0.21.0
    description: >-
      This is the OpenAPI specification for the [Figma REST
      API](https://www.figma.com/developers/api).
    termsOfService: https://www.figma.com/developer-terms/
    contact:
      email: support@figma.com
  servers:
    - url: https://api.figma.com
  paths:
    /v1/teams/{team_id}/projects:
      get:
        tags:
          - Projects
        summary: Get projects in a team
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: >-
          You can use this endpoint to get a list of all the Projects within the
          specified team. This will only return projects visible to the
          authenticated user or owner of the developer token. Note: it is not
          currently possible to programmatically obtain the team id of a user
          just from a token. To obtain a team id, navigate to a team page of a
          team you are a part of. The team id will be present in the URL after
          the word team and before your team name.
        operationId: getTeamProjects
        parameters:
          - name: team_id
            in: path
            description: ID of the team to list projects from
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/GetTeamProjectsResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrorBoolean'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
    /v1/teams/{team_id}/components:
      get:
        tags:
          - Components
        summary: Get team components
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: Get a paginated list of published components within a team library.
        operationId: getTeamComponents
        parameters:
          - name: team_id
            in: path
            description: Id of the team to list components from.
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: >-
              Number of items to return in a paged list of results. Defaults to
              30.
            schema:
              type: number
              default: 30
          - name: after
            in: query
            description: >-
              Cursor indicating which id after which to start retrieving
              components for. Exclusive with before. The cursor value is an
              internally tracked integer that doesn't correspond to any Ids.
            schema:
              type: number
          - name: before
            in: query
            description: >-
              Cursor indicating which id before which to start retrieving
              components for. Exclusive with after. The cursor value is an
              internally tracked integer that doesn't correspond to any Ids.
            schema:
              type: number
        responses:
          '200':
            $ref: '#/components/responses/GetTeamComponentsResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrMessage'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
    /v1/teams/{team_id}/component_sets:
      get:
        tags:
          - Component Sets
        summary: Get team component sets
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: >-
          Get a paginated list of published component sets within a team
          library.
        operationId: getTeamComponentSets
        parameters:
          - name: team_id
            in: path
            description: Id of the team to list component sets from.
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: >-
              Number of items to return in a paged list of results. Defaults to
              30.
            schema:
              type: number
              default: 30
          - name: after
            in: query
            description: >-
              Cursor indicating which id after which to start retrieving
              component sets for. Exclusive with before. The cursor value is an
              internally tracked integer that doesn't correspond to any Ids.
            schema:
              type: number
          - name: before
            in: query
            description: >-
              Cursor indicating which id before which to start retrieving
              component sets for. Exclusive with after. The cursor value is an
              internally tracked integer that doesn't correspond to any Ids.
            schema:
              type: number
        responses:
          '200':
            $ref: '#/components/responses/GetTeamComponentSetsResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrMessage'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
    /v1/teams/{team_id}/styles:
      get:
        tags:
          - Styles
        summary: Get team styles
        security:
          - PersonalAccessToken: []
          - OAuth2:
              - files:read
        description: Get a paginated list of published styles within a team library.
        operationId: getTeamStyles
        parameters:
          - name: team_id
            in: path
            description: Id of the team to list styles from.
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: >-
              Number of items to return in a paged list of results. Defaults to
              30.
            schema:
              type: number
              default: 30
          - name: after
            in: query
            description: >-
              Cursor indicating which id after which to start retrieving styles
              for. Exclusive with before. The cursor value is an internally
              tracked integer that doesn't correspond to any Ids.
            schema:
              type: number
          - name: before
            in: query
            description: >-
              Cursor indicating which id before which to start retrieving styles
              for. Exclusive with after. The cursor value is an internally
              tracked integer that doesn't correspond to any Ids.
            schema:
              type: number
        responses:
          '200':
            $ref: '#/components/responses/GetTeamStylesResponse'
          '400':
            $ref: '#/components/responses/BadRequestErrorResponseWithErrMessage'
          '403':
            $ref: '#/components/responses/ForbiddenErrorResponseWithErrMessage'
          '404':
            $ref: '#/components/responses/NotFoundErrorResponseWithErrorBoolean'
          '429':
            $ref: '#/components/responses/TooManyRequestsErrorResponseWithErrMessage'
          '500':
            $ref: '#/components/responses/InternalServerErrorResponseWithErrMessage'
  components:
    responses:
      GetTeamProjectsResponse:
        description: Response from the GET /v1/teams/{team_id}/projects endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The team's name.
                projects:
                  type: array
                  description: An array of projects.
                  items:
                    $ref: '#/components/schemas/Project'
              required:
                - name
                - projects
      GetTeamComponentsResponse:
        description: Response from the GET /v1/teams/{team_id}/components endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: The status of the request.
                  enum:
                    - 200
                error:
                  type: boolean
                  description: For successful requests, this value is always `false`.
                  enum:
                    - false
                meta:
                  type: object
                  properties:
                    components:
                      type: array
                      items:
                        $ref: '#/components/schemas/PublishedComponent'
                    cursor:
                      $ref: '#/components/schemas/ResponseCursor'
                  required:
                    - components
              required:
                - status
                - error
                - meta
      GetTeamComponentSetsResponse:
        description: Response from the GET /v1/teams/{team_id}/component_sets endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: The status of the request.
                  enum:
                    - 200
                error:
                  type: boolean
                  description: For successful requests, this value is always `false`.
                  enum:
                    - false
                meta:
                  type: object
                  properties:
                    component_sets:
                      type: array
                      items:
                        $ref: '#/components/schemas/PublishedComponentSet'
                    cursor:
                      $ref: '#/components/schemas/ResponseCursor'
                  required:
                    - component_sets
              required:
                - status
                - error
                - meta
      GetTeamStylesResponse:
        description: Response from the GET /v1/teams/{team_id}/styles endpoint.
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: The status of the request.
                  enum:
                    - 200
                error:
                  type: boolean
                  description: For successful requests, this value is always `false`.
                  enum:
                    - false
                meta:
                  type: object
                  properties:
                    styles:
                      type: array
                      items:
                        $ref: '#/components/schemas/PublishedStyle'
                    cursor:
                      $ref: '#/components/schemas/ResponseCursor'
                  required:
                    - styles
              required:
                - status
                - error
                - meta
      BadRequestErrorResponseWithErrMessage:
        description: >-
          Bad request. Parameters are invalid or malformed. Please check the
          input formats. This error can also happen if the requested resources
          are too large to complete the request, which results in a timeout.
          Please reduce the number and size of objects requested.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 400
                  required:
                    - status
      BadRequestErrorResponseWithErrorBoolean:
        description: >-
          Bad request. Parameters are invalid or malformed. Please check the
          input formats. This error can also happen if the requested resources
          are too large to complete the request, which results in a timeout.
          Please reduce the number and size of objects requested.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 400
                  required:
                    - status
      ForbiddenErrorResponseWithErrMessage:
        description: >-
          The request was valid, but the server is refusing action. The user
          might not have the necessary permissions for a resource, or may need
          an account of some sort.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 403
                  required:
                    - status
      NotFoundErrorResponseWithErrorBoolean:
        description: The requested file or resource was not found.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrorBoolean'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 404
                  required:
                    - status
      TooManyRequestsErrorResponseWithErrMessage:
        description: >-
          In some cases API requests may be throttled or rate limited. Please
          wait a while before attempting the request again (typically a minute).
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 429
                  required:
                    - status
      InternalServerErrorResponseWithErrMessage:
        description: An internal server error occurred.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ErrorResponsePayloadWithErrMessage'
                - type: object
                  properties:
                    status:
                      type: number
                      description: Status code
                      enum:
                        - 500
                  required:
                    - status
    schemas:
      PublishedComponent:
        type: object
        description: >-
          An arrangement of published UI elements that can be instantiated
          across figma files.
        properties:
          key:
            type: string
            description: The unique identifier for the component.
          file_key:
            type: string
            description: >-
              The unique identifier of the Figma file that contains the
              component.
          node_id:
            type: string
            description: The unique identifier of the component node within the Figma file.
          thumbnail_url:
            type: string
            description: A URL to a thumbnail image of the component.
          name:
            type: string
            description: The name of the component.
          description:
            type: string
            description: The description of the component as entered by the publisher.
          created_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the component was created.
          updated_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the component was last updated.
          user:
            $ref: '#/components/schemas/User'
            description: The user who last updated the component.
          containing_frame:
            $ref: '#/components/schemas/FrameInfo'
            description: The containing frame of the component.
        required:
          - key
          - file_key
          - node_id
          - name
          - description
          - created_at
          - updated_at
          - user
      PublishedComponentSet:
        type: object
        description: A node containing a set of variants of a component.
        properties:
          key:
            type: string
            description: The unique identifier for the component set.
          file_key:
            type: string
            description: >-
              The unique identifier of the Figma file that contains the
              component set.
          node_id:
            type: string
            description: >-
              The unique identifier of the component set node within the Figma
              file.
          thumbnail_url:
            type: string
            description: A URL to a thumbnail image of the component set.
          name:
            type: string
            description: The name of the component set.
          description:
            type: string
            description: The description of the component set as entered by the publisher.
          created_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the component set was created.
          updated_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the component set was last updated.
          user:
            $ref: '#/components/schemas/User'
            description: The user who last updated the component set.
          containing_frame:
            $ref: '#/components/schemas/FrameInfo'
            description: The containing frame of the component set.
        required:
          - key
          - file_key
          - node_id
          - name
          - description
          - created_at
          - updated_at
          - user
      PublishedStyle:
        type: object
        description: A set of published properties that can be applied to nodes.
        properties:
          key:
            type: string
            description: The unique identifier for the style
          file_key:
            type: string
            description: The unique identifier of the Figma file that contains the style.
          node_id:
            type: string
            description: ID of the style node within the figma file
          style_type:
            $ref: '#/components/schemas/StyleType'
          thumbnail_url:
            type: string
            description: A URL to a thumbnail image of the style.
          name:
            type: string
            description: The name of the style.
          description:
            type: string
            description: The description of the style as entered by the publisher.
          created_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the style was created.
          updated_at:
            type: string
            format: date-time
            description: The UTC ISO 8601 time when the style was last updated.
          user:
            $ref: '#/components/schemas/User'
            description: The user who last updated the style.
          sort_position:
            type: string
            description: A user specified order number by which the style can be sorted.
        required:
          - key
          - file_key
          - node_id
          - style_type
          - name
          - description
          - created_at
          - updated_at
          - user
          - sort_position
      Project:
        type: object
        description: >-
          A Project can be identified by both the Project name, and the Project
          ID.
        properties:
          id:
            type: string
            description: The ID of the project.
          name:
            type: string
            description: The name of the project.
        required:
          - id
          - name
      ResponseCursor:
        type: object
        description: Pagination cursor
        properties:
          before:
            type: number
          after:
            type: number
      ErrorResponsePayloadWithErrMessage:
        type: object
        description: A response indicating an error occurred.
        properties:
          status:
            type: number
            description: Status code
          err:
            type: string
            description: A string describing the error
        required:
          - status
          - err
      ErrorResponsePayloadWithErrorBoolean:
        type: object
        description: A response indicating an error occurred.
        properties:
          error:
            type: boolean
            description: For erroneous requests, this value is always `true`.
            enum:
              - true
          status:
            type: number
            description: Status code
          message:
            type: string
            description: A string describing the error
        required:
          - error
          - status
          - message
